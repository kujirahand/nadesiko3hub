### [作品情報]
### タイトル=やることビンゴ
### 作者=最上（もがみ）(user_id=55)
### ライセンス=CC0
### 説明=毎日繰り返す、子供の「やること」。これらを３ｘ３のビンゴにして、楽しくこなしちゃおう♪を目指したツールです。
### 対象バージョン=3.2.30
### URL=
### 種類=wnako
### タグ=
### 更新日時=2021-12-23 12:01:12
###

# -------------------------------------------
# --- やることビンゴ　version 5.4
# --- 3x3のビンゴです
# --- ビンゴのたびになにかしら誉めるようにしました。
# --- シャッフル機能を追加しました。
# --- 項目が少ないときは、真ん中がフリーになるよう調整しました
# --- 項目のチェックボックスを一括クリアするボタンを追加しました。
# --- チェックボックスで、「やること」を選べるようにしました。
# --- 画面上で「やること」を編集できるようにしました。（16文字まで推奨）
# ------------------------------------------------------------------
# --- すぺさるサンクス　誉め言葉を考えてくださったこもれびの皆様 ---
# ------------------------------------------------------------------

# --- 調整可能なパラメータ
# --- (x,y):パネル群左上の描画位置　w:パネル一枚の幅　h:パネル一枚の高さ　 line:ビンゴ線の長さ
パネル情報＝｛"x":10, "y":40, "w":100, "h":100, "line":20｝

# --- 色情報
線オフ色＝青色
線ビンゴ色=赤色
パネルオフ色=水色
パネルオン色=青色
文字オフ色＝黒色
文字オン色＝白色

クリア時メッセージ＝"ぜんぶできたよ♪がんばったね"


# --- 調整不可パラメータ
# --- 位置指定
横１=1
横２=2
横３=3
縦１=1
縦２=2
縦３=3
パネルオン=1
パネルオフ=0
ビンゴオン=1
ビンゴオフ=0
リーチ=2

ビンゴ数=0
リーチ数=0

PNL=0
BNG=1
パネル項目=[]
パネル状態=[ [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ],
                   [パネルオフ, ビンゴオフ]]
生活リスト=["かおをあらう", "うがい・てあらい", "うがい", "てあらい", "はみがき", 
            "おふろ", "きがえ", "くすり", "たいおんはかる", "おかたづけ", 
            "ごはん", "せんたくものをだす", "おてつだい"]
学校リスト=["しゅくだい", "おんどく", "かんじのかきとり", "さんすうプリント", "あしたのじゅんび"]
外出リスト=["ハンカチ", "ティッシュ", "マスク", "トイレ", "くつした、うわぎ", "のみもの"]

ほめるリスト=["すごい！", "えらい！", "その調子！", "すばらしい！", "すてき！", "さいこう！",
              "ファビュラス！", "エクセレント！", "パーフェクト！","ファンタスティック！",
              "よくできました！", "はくしゅ！",
              "グレート！", "アメイジング！"]

# -------------------------------------------
# --- パネル描画　関数定義
# -------------------------------------------
●パネル描画(PRM)
    3に線太設定

    もし、PRM["bflg"]がビンゴオフならば
        線オフ色に線色設定
    違えば
        線ビンゴ色に線色設定
    ここまで

    もし、PRM["pflg"]がパネルオフならば
        パネルオフ色に塗色設定
    違えば
        パネルオン色に塗色設定
    ここまで
    [PRM["x"],PRM["y"], PRM["w"], PRM["h"]]へ四角描画

ここまで

# -------------------------------------------
# --- パネル文字描画　関数定義
# -------------------------------------------
●パネル文字描画(PRM)
    「20px sans-serif」に描画フォント設定
    もし、PRM["pflg"]がパネルオフならば
        文字オフ色に塗色設定
    違えば
        文字オン色に塗色設定
    ここまで

    # --- 1行4文字で何行あるかチェック
    行数=((PRM["moji"]の文字数)/4)を0で小数点切上
    # --- 4文字ずつ取り出して表示
    Nを0から(行数-1)まで繰り返す
        もじ=PRM["moji"]で(N*4+1)から4文字抜出す
        [PRM["x"]+5, PRM["y"]+30+20*N]へもじを文字描画
    ここまで

ここまで

# -------------------------------------------
# --- ビンゴ列チェック関数定義
# -------------------------------------------
●ビンゴ列チェック（IDX1, IDX2, IDX3）
    オン数=0
    もし、（パネル状態[IDX1][PNL]=パネルオン）ならば
        オン数=オン数+1
    ここまで
    もし、（パネル状態[IDX2][PNL]=パネルオン）ならば
        オン数=オン数+1
    ここまで
    もし、（パネル状態[IDX3][PNL]=パネルオン）ならば
        オン数=オン数+1
    ここまで

    それ＝ビンゴオフ
    もし、（オン数=2）ならば
        # --- リーチ
        それ＝リーチ
        リーチ数=リーチ数+1
    違えば
        もし、（オン数=3）ならば
            # --- ビンゴ
                パネル状態[IDX1][BNG]=ビンゴオン
                パネル状態[IDX2][BNG]=ビンゴオン
                パネル状態[IDX3][BNG]=ビンゴオン
                それ＝ビンゴオン
                ビンゴ数=ビンゴ数+1
        ここまで
    ここまで
ここまで。

# -------------------------------------------
# --- ビンゴ列チェック関数定義
# -------------------------------------------
●ビンゴチェック
    # --- パネル状態初期化
    Nを0から8まで繰り返す
         パネル状態[N][BNG]=ビンゴオフ
    ここまで

    ビンゴ数=0
    リーチ数=0

    # --- 横1　012 
    ビンゴ列チェック(0,1,2)
    ビンゴ横線描画(横１,それ)
    # --- 横２　345
    ビンゴ列チェック(3,4,5)
    ビンゴ横線描画(横２,それ)
    # --- 横２　678
    ビンゴ列チェック(6,7,8)
    ビンゴ横線描画(横３,それ)
    # --- 縦１　036
    ビンゴ列チェック(0,3,6)
    ビンゴ縦線描画(縦１,それ)
    # --- 縦２　147
    ビンゴ列チェック(1,4,7)
    ビンゴ縦線描画(縦２,それ)
    # --- 横1　 258
    ビンゴ列チェック(2,5,8)
    ビンゴ縦線描画(縦３,それ)
    # --- 右斜め　246
    ビンゴ列チェック(2,4,6)
    ビンゴ右斜め線描画(それ)
    # --- 左斜め　048
    ビンゴ列チェック(0,4,8)
    ビンゴ左斜め線描画(それ)

    # --- パネル更新
    Nを0から8まで繰り返す
        idx=N%3
        idy=((N/3)を0で小数点切下)
        P={ "x":パネル情報["x"]+パネル情報["w"]*idx+パネル情報["line"]*idx,
               "y":パネル情報["y"]+パネル情報["h"]*idy+パネル情報["line"]*idy,
               "w":パネル情報["w"],
               "h":パネル情報["h"],
               "pflg":パネル状態[N][PNL],
               "bflg":パネル状態[N][BNG],
               "moji":パネル項目[N]}
        パネル描画(P)
        パネル文字描画(P)
    ここまで

ここまで。

# -------------------------------------------
# --- パネルクリックチェック関数定義
# -------------------------------------------
●パネルクリックチェック(MX,MY)
    Nを0から8まで繰り返す
        idx=N%3
        idy=((N/3)を0で小数点切下)
        x1=パネル情報["x"]+パネル情報["w"]*idx+パネル情報["line"]*idx
        y1=パネル情報["y"]+パネル情報["h"]*idy+パネル情報["line"]*idy
        x2=x1+パネル情報["w"]
        y2=y1+パネル情報["h"]

        もし、MX≧x1ならば
           もし、MY≧y1ならば
                もし、MX≦x2ならば
                    もし、MY≦y2ならば

                        # --- パネル切り替え（間違えた場合にやりなおせるように）
                        もし、パネル状態[N][PNL]=パネルオフならば
                            パネル状態[N][PNL]=パネルオン
                        違えば
                            パネル状態[N][PNL]=パネルオフ
                        ここまで

                    ここまで
                ここまで
            ここまで
        ここまで

    ここまで
ここまで

# -------------------------------------------
# --- パネル初期化　関数定義
# -------------------------------------------
●パネル初期化
    ビンゴ数=0
    リーチ数=0

    Nを0から8まで繰り返す
        パネル状態[N][PNL]=パネルオフ
        パネル状態[N][BNG]=ビンゴオフ

        idx=N%3
        idy=((N/3)を0で小数点切下)

        P={ "x":パネル情報["x"]+パネル情報["w"]*idx+パネル情報["line"]*idx,
               "y":パネル情報["y"]+パネル情報["h"]*idy+パネル情報["line"]*idy,
               "w":パネル情報["w"],
               "h":パネル情報["h"],
               "pflg":パネル状態[N][PNL],
               "bflg":パネル状態[N][BNG],
               "moji":パネル項目[N]}
        パネル描画(P)
        パネル文字描画(P)
    ここまで
    
    ビンゴ横線描画(横１, ビンゴオフ)
    ビンゴ横線描画(横２, ビンゴオフ)
    ビンゴ横線描画(横３, ビンゴオフ)
    ビンゴ縦線描画(縦１, ビンゴオフ)
    ビンゴ縦線描画(縦２, ビンゴオフ)
    ビンゴ縦線描画(縦３, ビンゴオフ)
    ビンゴ右斜め線描画(ビンゴオフ)
    ビンゴ左斜め線描画(ビンゴオフ)

ここまで

# -------------------------------------------
# --- ビンゴ横線描画　関数定義
# -------------------------------------------
●ビンゴ横線描画(Y, FLG)
    L1={　"x1":パネル情報["x"]+パネル情報["w"]*1+パネル情報["line"]*0,
               "y1":パネル情報["y"]+パネル情報["h"]*(Y-1)+パネル情報["line"]*(Y-1)+((パネル情報["h"])/2)を0で小数点切下,
               "x2":パネル情報["x"]+パネル情報["w"]*1+パネル情報["line"]*1,
               "y2":パネル情報["y"]+パネル情報["h"]*(Y-1)+パネル情報["line"]*(Y-1)+((パネル情報["h"])/2)を0で小数点切下,
               "flg":FLG
          }
    ビンゴ線描画(L1)
    L2={　"x1":パネル情報["x"]+パネル情報["w"]*2+パネル情報["line"]*1,
               "y1":パネル情報["y"]+パネル情報["h"]*(Y-1)+パネル情報["line"]*(Y-1)+((パネル情報["h"])/2)を0で小数点切下,
               "x2":パネル情報["x"]+パネル情報["w"]*2+パネル情報["line"]*2,
               "y2":パネル情報["y"]+パネル情報["h"]*(Y-1)+パネル情報["line"]*(Y-1)+((パネル情報["h"])/2)を0で小数点切下,
               "flg":FLG
         }
    ビンゴ線描画(L2)
ここまで

# -------------------------------------------
# --- ビンゴ縦線描画　関数定義
# -------------------------------------------
●ビンゴ縦線描画(X,FLG)
    L1={　"x1":パネル情報["x"]+パネル情報["w"]*(X-1)+パネル情報["line"]*(X-1)+((パネル情報["w"])/2)を0で小数点切下,
               "y1":パネル情報["y"]+パネル情報["h"]*1+パネル情報["line"]*0,
               "x2":パネル情報["x"]+パネル情報["w"]*(X-1)+パネル情報["line"]*(X-1)+((パネル情報["w"])/2)を0で小数点切下,
               "y2":パネル情報["y"]+パネル情報["h"]*1+パネル情報["line"]*1,
               "flg":FLG
          }
    ビンゴ線描画(L1)
    L2={　"x1":パネル情報["x"]+パネル情報["w"]*(X-1)+パネル情報["line"]*(X-1)+((パネル情報["w"])/2)を0で小数点切下,
               "y1":パネル情報["y"]+パネル情報["h"]*2+パネル情報["line"]*1,
               "x2":パネル情報["x"]+パネル情報["w"]*(X-1)+パネル情報["line"]*(X-1)+((パネル情報["w"])/2)を0で小数点切下,
               "y2":パネル情報["y"]+パネル情報["h"]*2+パネル情報["line"]*2,
               "flg":FLG
         }
    ビンゴ線描画(L2)
ここまで

# -------------------------------------------
# --- ビンゴ右斜め線描画　関数定義
# -------------------------------------------
●ビンゴ右斜め線描画(FLG)
    L1={　"x1":パネル情報["x"]+パネル情報["w"]*2+パネル情報["line"]*2,
          "y1":パネル情報["y"]+パネル情報["h"]*1+パネル情報["line"]*0,
          "x2":パネル情報["x"]+パネル情報["w"]*2+パネル情報["line"]*1,
          "y2":パネル情報["y"]+パネル情報["h"]*1+パネル情報["line"]*1,
          "flg":FLG
          }
    ビンゴ線描画(L1)
    L2={　"x1":パネル情報["x"]+パネル情報["w"]*1+パネル情報["line"]*1,
          "y1":パネル情報["y"]+パネル情報["h"]*2+パネル情報["line"]*1,
          "x2":パネル情報["x"]+パネル情報["w"]*1+パネル情報["line"]*0,
          "y2":パネル情報["y"]+パネル情報["h"]*2+パネル情報["line"]*2,
          "flg":FLG
         }
    ビンゴ線描画(L2)
ここまで

# -------------------------------------------
# --- ビンゴ左斜め線描画　関数定義
# -------------------------------------------
●ビンゴ左斜め線描画(FLG)
    L1={　"x1":パネル情報["x"]+パネル情報["w"]*1,
          "y1":パネル情報["y"]+パネル情報["h"]*1,
          "x2":パネル情報["x"]+パネル情報["w"]*1+パネル情報["line"]*1,
          "y2":パネル情報["y"]+パネル情報["h"]*1+パネル情報["line"]*1,
          "flg":FLG
          }
    ビンゴ線描画(L1)
    L2={　"x1":パネル情報["x"]+パネル情報["w"]*2+パネル情報["line"]*1,
          "y1":パネル情報["y"]+パネル情報["h"]*2+パネル情報["line"]*1,
          "x2":パネル情報["x"]+パネル情報["w"]*2+パネル情報["line"]*2,
          "y2":パネル情報["y"]+パネル情報["h"]*2+パネル情報["line"]*2,
          "flg":FLG
         }
    ビンゴ線描画(L2)
ここまで

# -------------------------------------------
# --- ビンゴ線描画　関数定義
# -------------------------------------------
●ビンゴ線描画(PRM)
    3に線太設定
    もし、PRM["flg"]がビンゴオンならば
        線ビンゴ色に線色設定
    違えば
        線オフ色に線色設定
    ここまで
    [PRM["x1"],PRM["y1"]]から[PRM["x2"],PRM["y2"]]まで線描画
ここまで

# -------------------------------------------
# --- 結果表示　関数定義
# -------------------------------------------
●結果表示
   結果文字=「」
   
    もし、ビンゴ数=8ならば
        「24px sans-senrif」に描画フォント設定        
        結果文字=クリア時メッセージ
    違えば
        「20px sans-senrif」に描画フォント設定
        つなぎ=「」
        もし、リーチ数>0ならば
            結果文字=「{結果文字}{リーチ数}リーチ」
            つなぎ=「＆」
        ここまで
        もし、ビンゴ数>0ならば
            ほめるリストを配列シャッフル
            結果文字=「{結果文字}{つなぎ}{ビンゴ数}ビンゴ {ほめるリスト[0]}」
            
        ここまで
    ここまで

    もし、（結果文字の文字数）>0ならば

        黒色に塗色設定
        [20,30]へ結果文字を文字描画
    ここまで
ここまで

# -------------------------------------------
# --- メイン処理ここから
# --- 初期表示
「３ｘ３のやることビンゴ」と表示。
「やることが終わったら、パネルをクリックしてね」と表示。
「間違えたら、もう一度パネルをクリックしてね」と表示。
「やることをかえることもできるよ」と表示。

「やることをかえたいときはこちらで」のラベル作成。
「<br>」のラベル作成。
「シャッフルしてやりなおし」のボタン作成して、設定ボタンに代入。
「チェックをすべてはずす」のボタン作成して、全チェッククリアボタンに代入。
「<br>」のラベル作成。
「1．生活<br>」のラベル作成。
生活リスト[0]のチェックボックス作成して、チェック_生活00に代入。
生活リスト[1]のチェックボックス作成して、チェック_生活01に代入。
生活リスト[2]のチェックボックス作成して、チェック_生活02に代入。
「<br>」のラベル作成。
生活リスト[3]のチェックボックス作成して、チェック_生活03に代入。チェック_生活03の「checked」にオンをDOM属性設定
生活リスト[4]のチェックボックス作成して、チェック_生活04に代入。チェック_生活04の「checked」にオンをDOM属性設定
生活リスト[5]のチェックボックス作成して、チェック_生活05に代入。チェック_生活05の「checked」にオンをDOM属性設定
「<br>」のラベル作成。
生活リスト[6]のチェックボックス作成して、チェック_生活06に代入。
生活リスト[7]のチェックボックス作成して、チェック_生活07に代入。
生活リスト[8]のチェックボックス作成して、チェック_生活08に代入。チェック_生活08の「checked」にオンをDOM属性設定
「<br>」のラベル作成。
生活リスト[9]のチェックボックス作成して、チェック_生活09に代入。チェック_生活09の「checked」にオンをDOM属性設定
生活リスト[10]のチェックボックス作成して、チェック_生活10に代入。チェック_生活10の「checked」にオンをDOM属性設定
生活リスト[11]のチェックボックス作成して、チェック_生活11に代入。チェック_生活11の「checked」にオンをDOM属性設定
「<br>」のラベル作成。
生活リスト[12]のチェックボックス作成して、チェック_生活12に代入。
「<br>2．学校<br>」のラベル作成。
学校リスト[0]のチェックボックス作成して、チェック_学校00に代入。チェック_学校00の「checked」にオンをDOM属性設定
学校リスト[1]のチェックボックス作成して、チェック_学校01に代入。
学校リスト[2]のチェックボックス作成して、チェック_学校02に代入。
「<br>」のラベル作成。
学校リスト[3]のチェックボックス作成して、チェック_学校03に代入。
学校リスト[4]のチェックボックス作成して、チェック_学校04に代入。。チェック_学校04の「checked」にオンをDOM属性設定
「<br>3．おでかけ<br>」のラベル作成。
外出リスト[0]のチェックボックス作成して、チェック_外出00に代入。
外出リスト[1]のチェックボックス作成して、チェック_外出01に代入。
外出リスト[2]のチェックボックス作成して、チェック_外出02に代入。
「<br>」のラベル作成。
外出リスト[3]のチェックボックス作成して、チェック_外出03に代入。
外出リスト[4]のチェックボックス作成して、チェック_外出04に代入。
外出リスト[5]のチェックボックス作成して、チェック_外出05に代入。

「<br>」のラベル作成。

「4．自由に設定<br>」のラベル作成。
空のエディタ作成して、項目エディタ１１に代入。
空のエディタ作成して、項目エディタ１２に代入。
空のエディタ作成して、項目エディタ１３に代入。「<br>」のラベル作成。
空のエディタ作成して、項目エディタ２１に代入。
空のエディタ作成して、項目エディタ２２に代入。
空のエディタ作成して、項目エディタ２３に代入。「<br>」のラベル作成。
空のエディタ作成して、項目エディタ３１に代入。
空のエディタ作成して、項目エディタ３２に代入。
空のエディタ作成して、項目エディタ３３に代入。「<br>」のラベル作成。


表示項目設定(1)
パネル初期化

# --- 全チェッククリアボタン
全チェッククリアボタンをクリックした時には
    項目チェック全初期化
ここまで。

# --- 設定ボタンクリック
設定ボタンをクリックした時には
    表示項目設定(1)
    全描画クリア
　  パネル初期化
ここまで。


# --- パネルクリックイベント
描画中キャンバスをマウス押した時には
    全描画クリア。
    パネルクリックチェック(マウスX,マウスY)
    ビンゴチェック。
    結果表示。
ここまで。

# -------------------------------------------
# --- 項目チェック全初期化　関数定義
# -------------------------------------------
●項目チェック全初期化
    チェック_生活00の「checked」にオフをDOM属性設定
    チェック_生活01の「checked」にオフをDOM属性設定
    チェック_生活02の「checked」にオフをDOM属性設定
    チェック_生活03の「checked」にオフをDOM属性設定
    チェック_生活04の「checked」にオフをDOM属性設定
    チェック_生活05の「checked」にオフをDOM属性設定
    チェック_生活06の「checked」にオフをDOM属性設定
    チェック_生活07の「checked」にオフをDOM属性設定
    チェック_生活08の「checked」にオフをDOM属性設定
    チェック_生活09の「checked」にオフをDOM属性設定
    チェック_生活10の「checked」にオフをDOM属性設定
    チェック_生活11の「checked」にオフをDOM属性設定
    チェック_生活12の「checked」にオフをDOM属性設定
    チェック_学校00の「checked」にオフをDOM属性設定
    チェック_学校01の「checked」にオフをDOM属性設定
    チェック_学校02の「checked」にオフをDOM属性設定
    チェック_学校03の「checked」にオフをDOM属性設定
    チェック_学校04の「checked」にオフをDOM属性設定
    チェック_外出00の「checked」にオフをDOM属性設定
    チェック_外出01の「checked」にオフをDOM属性設定
    チェック_外出02の「checked」にオフをDOM属性設定
    チェック_外出03の「checked」にオフをDOM属性設定
    チェック_外出04の「checked」にオフをDOM属性設定
    チェック_外出05の「checked」にオフをDOM属性設定
ここまで

# -------------------------------------------
# --- 表示項目設定　関数定義
# --- SFL　0:シャッフルなし　1:シャッフルあり
# -------------------------------------------
●表示項目設定(SFL)
    パネル項目=[]
    
    項目エディタ１１のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ１２のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ１３のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ２１のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ２２のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ２３のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ３１のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ３２のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    項目エディタ３３のテキスト取得をMOJIに代入
    もし、(MOJIの文字数)>0なら、
        パネル項目にMOJIを配列追加
    ここまで
    
    チェック_生活00の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[0]を配列追加
　　ここまで
　　チェック_生活01の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[1]を配列追加
　　ここまで
　　チェック_生活02の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[2]を配列追加
　　ここまで
　　チェック_生活03の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[3]を配列追加
　　ここまで
　　チェック_生活04の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[4]を配列追加
　　ここまで
　　チェック_生活05の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[5]を配列追加
　　ここまで
　　チェック_生活06の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[6]を配列追加
　　ここまで
　　チェック_生活07の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[7]を配列追加
　　ここまで
　　チェック_生活08の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[8]を配列追加
　　ここまで
　　チェック_生活09の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[9]を配列追加
　　ここまで
　　チェック_生活10の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[10]を配列追加
　　ここまで
　　チェック_生活11の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[11]を配列追加
　　ここまで
　　チェック_生活12の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に生活リスト[12]を配列追加
　　ここまで
　　チェック_学校00の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に学校リスト[0]を配列追加
　　ここまで
　　チェック_学校01の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に学校リスト[1]を配列追加
　　ここまで
　　チェック_学校02の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に学校リスト[2]を配列追加
　　ここまで
　　チェック_学校03の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に学校リスト[3]を配列追加
　　ここまで
　　チェック_学校04の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に学校リスト[4]を配列追加
　　ここまで
　　チェック_外出00の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に外出リスト[0]を配列追加
　　ここまで
　　チェック_外出01の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に外出リスト[1]を配列追加
　　ここまで
　　チェック_外出02の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に外出リスト[2]を配列追加
　　ここまで
　　チェック_外出03の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に外出リスト[3]を配列追加
　　ここまで
　　チェック_外出04の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に外出リスト[4]を配列追加
　　ここまで
　　チェック_外出05の「checked」をDOM属性取得。
　　もし、それがオンならば、
　　    パネル項目に外出リスト[5]を配列追加
　　ここまで
　　    

　　パネル項目の配列要素数をCNTに代入。
　　(8-CNT)回繰り返す
　　    パネル項目に"フリー"を配列追加
　　ここまで
　　
　　もし、SFL=1ならば
　　    パネル項目を配列シャッフル
    ここまで　　
　　
    もし、CNT<9ならば、
        パネル項目にパネル項目[4]を配列追加
        パネル項目[4]="フリー"
    ここまで
    
ここまで