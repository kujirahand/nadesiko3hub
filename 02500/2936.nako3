### [作品情報]
### 掲載URL=https://n3s.nadesi.com/id.php?2936
### タイトル=4*4個の点を格子状に並べてできる正方形の完全マッチング
### 作者=ユメミノウツツ(user_id=0)
### ライセンス=CC0
### 説明=授業課題用に作ったプログラム（自分用）。4*4個の点を格子状に並べてできる正方形の完全マッチングを描画します。36個あります。やや重たいです。
### 対象バージョン=3.6.41
### URL=
### 種類=wnako
### タグ=
### 更新日時=2025-01-14 22:50:15
###

LY_Ary=[0,0,0,0]  // 横 3本まで入る
LT_Ary=[0,0,0]    // 縦 4本まで入る
L_Bit=0
P=0
i=0
j=0
本数=0
FLAG_ダメ=false
マッチング個数=0

ビット列=0
1<<20から1<<24までビット列で繰り返す
    L_Bit=ビット列
    
    // ビット列の1を辺あり、0を辺なしに対応させる
    もし、（（L_Bitの二進）で1の出現回数）!=8ならば、
        続ける
    ここまで
    LY_Ary[0]=L_Bitの21から3ビット左抜き出し
    LT_Ary[0]=L_Bitの17から4ビット左抜き出し
    LY_Ary[1]=L_Bitの14から3ビット左抜き出し
    LT_Ary[1]=L_Bitの10から4ビット左抜き出し
    LY_Ary[2]=L_Bitの7から3ビット左抜き出し
    LT_Ary[2]=L_Bitの3から4ビット左抜き出し
    LY_Ary[3]=L_Bitの0から3ビット左抜き出し
    
    // 各点から伸びる辺が1本かチェック
    16回
        P=回数-1
        i=FLOOR(P/4)
        j=P%4
        // 左右について
        本数＝本数+(ゼロ判定(AND(LY_Ary[i], 0b1000>>j)))+(ゼロ判定(AND(LY_Ary[i], 0b1000>>(j+1))))
        // 上下について
        もし、i!=3ならば、
            本数＝本数＋ゼロ判定(AND(LT_Ary[i], 0b1000>>j))
        ここまで
        もし、i!=0ならば、
            本数＝本数＋ゼロ判定(AND(LT_Ary[i-1], 0b1000>>j))
        ここまで
        
        // 1つの点には1辺のみ
        もし、本数!=1ならば、
            本数=0
            FLAG_ダメ=true
            抜ける
        ここまで
        
        本数=0
    ここまで
    
    // 完全マッチングでなければスルー
    もし、FLAG_ダメ=trueならば、
        FLAG_ダメ=false
        続ける
    ここまで

    // 結果表示
    マッチング個数を1増やす
    「【｛マッチング個数｝】」を表示
    3回
        LY_Ary[回数-1]を横結果表示
        LT_Ary[回数-1]を縦結果表示
    ここまで
    LY_Ary[3]を横結果表示
    空を表示
ここまで

/**
* 0インデックス。LSBを0とする。
*/
●（VのN）ビット目とは、
    もし、AND(V,1<<N)=0ならば、
        0で戻る
    違えば、
        1で戻る
    ここまで
ここまで

/**
* 0インデックス。LSBを0とする。抜出数は1文字から。
*/
●（VのAからB）ビット左抜き出しとは、
    AND(V>>A, 2^B-1)で戻る
ここまで

/**
* 0ならば0、それ以外なら1が返る
*/
●（Nを）ゼロ判定とは、
    もし、Nならば、
        1で戻る
    違えば
        0で戻る
    ここまで
ここまで

// 点と辺を描く
●（Vを）横結果表示とは、
    もし、AND(V,0b100)!=0ならば、
        「・―」を継続表示
    違えば、
        「・　」を継続表示
    ここまで
    もし、AND(V,0b10)!=0ならば、
        「・―」を継続表示
    違えば、
        「・　」を継続表示
    ここまで
    もし、AND(V,0b1)!=0ならば、
        「・―・」を表示
    違えば、
        「・　・」を表示
    ここまで
ここまで

●（Vを）縦結果表示とは、
    もし、AND(V,0b1000)!=0ならば、
        「｜　」を継続表示
    違えば、
        「　　」を継続表示
    ここまで
    もし、AND(V,0b100)!=0ならば、
        「｜　」を継続表示
    違えば、
        「　　」を継続表示
    ここまで
    もし、AND(V,0b10)!=0ならば、
        「｜　」を継続表示
    違えば、
        「　　」を継続表示
    ここまで
    もし、AND(V,0b1)!=0ならば、
        「｜」を表示
    違えば、
        「　」を表示
    ここまで
ここまで