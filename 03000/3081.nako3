### [作品情報]
### 掲載URL=https://n3s.nadesi.com/id.php?3081
### タイトル=にゃんこー掲示板
### 作者=みけCAT(user_id=398)
### ライセンス=MIT
### 説明=猫の顔文字で、電光掲示板風の表示を行う
### 対象バージョン=3.7.8
### URL=https://note.com/mi_ke_cat/n/n4821a305b052
### 種類=wnako
### タグ=
### 更新日時=2025-10-19 23:47:12
###

表示データは「
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,1,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
」をCSV取得。
それの0を配列削除。
データ長さは表示データ@0の要素数。
表示高は表示データの要素数。
表示幅は16。
移動間隔は100。# [ms]

DOM親要素の「行揃え」に「中央」をDOMスタイル設定。
背景は「DIV」のDOM部品作成。
それに{
  "white-space": "nowrap",
  "background": "#909090",
  "display": "inline-block",
  "padding": "0.75ex",
}をDOMスタイル一括設定。
それにDOM親部品設定。
要素配列は空配列。
VRAMは空配列。
Yで0から(表示高-1)まで繰り返す
  要素配列に空配列を配列追加。
  VRAMに空配列を配列追加。
  Xで0から(表示幅-1)まで繰り返す
    「🐱」のラベル作成。
    要素配列@Yにそれを配列追加。
    VRAM@Yに偽を配列追加。
  ここまで。
  改行作成。
ここまで。

●VRAM反映とは
  Yで0から(表示高-1)まで繰り返す
    Xで0から(表示幅-1)まで繰り返す
      もし、VRAM@Y,Xならば
        要素配列@Y,Xの「opacity」に「1」をDOMスタイル設定。
      違えば
        要素配列@Y,Xの「opacity」に「0.25」をDOMスタイル設定。
      ここまで。
    ここまで。
  ここまで。
ここまで。

VRAM反映。

表示位置はデータ長さから表示幅を引く。
更新時刻はシステム時間ミリ秒。
●表示更新とは
  {関数}表示更新を画面更新時実行。
  システム時間ミリ秒から更新時刻を引いて移動間隔で割って切り捨て。
  定数の移動距離はそれ。
  もし、移動距離が0以下ならば、戻る。
  移動間隔に移動距離を掛ける。
  更新時刻をそれだけ増やす。
  表示位置は表示位置に移動距離を足してデータ長さで割った余り。
  Yで0から(表示高-1)まで繰り返す
    Xで0から(表示幅-1)まで繰り返す
      VRAM@Y,Xは表示データ@Y,(表示位置にXを足してデータ長さで割った余り)。
    ここまで。
  ここまで。
  VRAM反映。
ここまで。
{関数}表示更新を画面更新時実行。