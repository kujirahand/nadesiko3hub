### [作品情報]
### 掲載URL=https://n3s.nadesi.com/id.php?2730
### タイトル=画像処理テスト
### 作者=雪乃☆雫(user_id=0)
### ライセンス=CC0
### 説明=画像処理のテストいろいろ
### 対象バージョン=3.4.26
### URL=
### 種類=wnako
### タグ=
### 更新日時=2024-01-16 23:44:13
###

テスト画像幅＝640。
画像w＝テスト画像幅。画像h＝画像w/4*3。処理範囲＝[0,0,画像w,画像h]
URL＝「https://n3s.nadesi.com/image.php?f=8.jpg」。撫子＝空。

撫子＝URLの画像読み待つ、
[0,0,画像w,画像h]へ撫子を画像描画。
開始時間＝システム時間ミリ秒。
//処理範囲を画像グレイスケール
//処理範囲を6で画像ポスタリゼーション。

終了時間＝システム時間ミリ秒。
終了時間-開始時間&「ms」を表示


10で[640,480]のノイズ画像作成
●(割合でwhの)ノイズ画像作成
    変数[w,h]=wh。
    色データは[0,0,w,h]の色データ取得
    必要要素数はw*h。
    ノイズ量は(必要要素数*0.01*割合)を切り捨て。
    ノイズは1をノイズ量だけ配列要素作成。
    0を(必要要素数-ノイズ量)だけ配列要素作成して、それをノイズの0に配列一括挿入。
    ノイズを配列シャッフル
    //ノイズを表示。
    ノイズを反復。
        もし対象=1ならば、
            3回。色データ[対象キー*4+回数-1]=0。ここまで。
            色データ[対象キー*4+3]=25
        ここまで
    ここまで。
[0,0,w,h]を色データで画像処理反映。

ここまで。
    

●(階調数でxywhを)画像ポスタリゼーション
　色データとは変数＝xywhの色データ取得。
　//色データを表示
　中間値一覧とは変数＝空配列。
　階調値一覧とは変数＝空配列。
　階調数回
　　　階調値一覧に(255/(階調数-1))*(回数-1)を切り捨てを配列追加。
　　　中間値一覧に(256/階調数*(回数))を切り捨てを配列追加。
　ここまで
　階調値一覧を表示
　中間値一覧を表示
　(色データの要素数)/4回
　　　Cとは変数＝(回数-1)*4。
　　　３回
　　　　rgb＝回数-1。
　　　　階調数回
　　　　　もし、(色データ[C+rgb]＜中間値一覧[回数-1])ならば
　　　　　　　色データ[C+rgb]＝階調値一覧[回数-1]。
　　　　　　　抜ける。
　　　　　ここまで。
　　　　ここまで。
　　　ここまで。
　ここまで。
　//色データを表示
xywhを色データで画像処理反映。

ここまで。


●(xywhを)画像ソラリゼーション
　色データとは変数＝xywhの色データ取得。
　(色データの要素数)/4回
　　　Cとは変数＝(回数-1)*4。
　　　３回。
　　　　　もし、色データ[C+回数-1]≦127ならば、色データ[C+回数-1]＝色データ[C+回数-1]*2。
　　　　　違えば、色データ[C+回数-1]＝255*2-色データ[C+回数-1]*2
　　　ここまで。
　ここまで。
　xywhを色データで画像処理反映。
ここまで。


#-----------------------------------------------
＃画像処理
#-----------------------------------------------
●(xywhを)画像グレイスケール
　色データとは変数＝xywhの色データ取得。
　(色データの要素数)/4回
　　　Cとは変数＝(回数-1)*4。
　　　色平均とは変数＝(色データ[C] + 色データ[C+1] + 色データ[C+2])/3。
　　　3回。色データ[C+回数-1]＝色平均。ここまで。
　ここまで。
　xywhを色データで画像処理反映。
ここまで。
#-----------------------------------------------
＃色データの取得と設定
#-----------------------------------------------
●(xywhの|xywhを)色データ取得
　描画中コンテキストの「getImageData」をxywhでJSメソッド実行して、それ["data"]で戻る。
ここまで。
●(xywhを色データで|xywhに)画像処理反映
『(function (xywh,color,ctx){
const [x,y,w,h]=xywh;
const img = ctx.getImageData(x,y,w,h);
let data = img.data;
for (let i=0; i<data.length;i++){data[i]=color[i]}
ctx.putImageData(img,x,y);
})』を[xywh,色データ,描画中コンテキスト]でJS関数実行。
ここまで。