### [作品情報]
### 掲載URL=https://n3s.nadesi.com/id.php?1480
### タイトル=近傍点を探索するプログラム２
### 作者=sphiarno🕷️88ver.(user_id=77)
### ライセンス=CC0
### 説明=「近傍点を探索するプログラム」の５方向で負の値をとらないバージョンです。いぶし銀な探索者です🎩
### 対象バージョン=3.3.57
### URL=
### 種類=wnako
### タグ=
### 更新日時=2022-07-03 13:17:38
###

＃　🐭　乱数の近似点を探索します　　　　🐭
＃　👩　「打点」を押して試してみてね　　👩
＃　👯　５方向の負をとらないバージョン　💃

《🍵》＝０．０４

単位スケールは、１２
ペンサイズは、単位スケール／４
円サイズは、単位スケール
点サイズは、単位スケール／８
キャンバスサイズは、３００
ボイドは、NULL

平面座標は、｛「Ｘ」：０、「Ｙ」：０｝
中心座標は、｛「Ｘ」：０、「Ｙ」：０｝
五次元整数座標は、｛Ｖ：０、Ｗ：０、Ｘ：０、Ｙ：０、Ｚ：０｝
拡大率等倍は、６５５３６
比数Ｓ１８は、２０２５２
比数Ｃ１８は、６２３２８
比数Ｓ５４は、５３０２０
比数Ｃ５４は、３８５２１

●（Ａの）二次元変換とは、
    ／／　Ａは五次元整数座標
    ／／　目盛上の同一数値を返す。
    返却値は、｛
    　　「Ｘ」：（比数Ｃ１８＊（Ａ＠「Ｗ」－Ａ＠「Ｚ」）＋比数Ｃ５４＊（Ａ＠「Ｘ」－Ａ＠「Ｙ」））／拡大率等倍＊単位スケール、
    　　「Ｙ」：（（－１）＊拡大率等倍＊Ａ＠「Ｖ」＋（－１）＊比数Ｓ１８＊（Ａ＠「Ｗ」＋Ａ＠「Ｚ」）＋比数Ｓ５４＊（Ａ＠「Ｘ」＋Ａ＠「Ｙ」））／拡大率等倍＊単位スケール
    ｝
    メッセージ＝「Ｘ：」＆（返却値＠「Ｘ」を文字列変換）＆「　Ｙ：」＆（返却値＠「Ｙ」を文字列変換）
    ／／　メッセージを表示。
　　返却値を戻す。
ここまで。

●（ボイドで）乱点発生とは、
    座標＝｛
    　　「Ｘ」：（（キャンバスサイズ＊拡大率等倍）の乱数）／拡大率等倍－（キャンバスサイズ／２）、
    　　「Ｙ」：（（キャンバスサイズ＊拡大率等倍）の乱数）／拡大率等倍－（キャンバスサイズ／２）
    ｝
    メッセージ＝「Ｘ：」＆（座標＠「Ｘ」を文字列変換）＆「　Ｙ：」＆（座標＠「Ｙ」を文字列変換）
    ／／　メッセージを表示。
    座標を戻す。
ここまで。

●（ＡからＢへ）打線とは、
    ／／　Ａ、Ｂは平面座標
    「#80008020」に線色設定。
    ［（Ａ＠「Ｘ」）、（Ａ＠「Ｙ」）］から［（Ｂ＠「Ｘ」）、（Ｂ＠「Ｙ」）］まで線描画。
    ／／　Ａ、Ｂは平面座標
ここまで。

●（点色でＡの）打点とは、
    ／／　Ａは平面座標
    点色に線色設定。点色に塗色設定。
    ［（Ａ＠「Ｘ」）、（Ａ＠「Ｙ」）］に点サイズの円描画。
ここまで。

●（円色でＡの）打円とは、
    ／／　Ａは平面座標
    円色に線色設定。「#a0a0f040」に塗色設定。
    ［（Ａ＠「Ｘ」）、（Ａ＠「Ｙ」）］に円サイズの円描画。
ここまで。

●（平面点Ａと平面点Ｂの）ユークリッド距離とは、
    距離＝（（（平面点Ａ＠「Ｘ」－平面点Ｂ＠「Ｘ」）の二乗）＋（（平面点Ａ＠「Ｙ」－平面点Ｂ＠「Ｙ」）の二乗））の平方根
    メッセージは、「ユークリッド距離：」＆（距離を文字列変換）
    ／／　メッセージを表示。
    ／／　平面点Ａから平面点Ｂへ打線。
    距離を戻す。
ここまで。

●（平面点Ａの）最近傍五次元座標とは、
    Ｒは、｛「Ｖ」：０、「Ｗ」：０、「Ｘ」：０、「Ｙ」：０、「Ｚ」：０｝
    Ｄ＝１
    （Ｄ＞０）の間、
        比較列は、［
        　　｛「Ｖ」：Ｒ＠「Ｖ」＋０、「Ｗ」：Ｒ＠「Ｗ」＋０、「Ｘ」：Ｒ＠「Ｘ」＋０、「Ｙ」：Ｒ＠「Ｙ」＋０、「Ｚ」：Ｒ＠「Ｚ」＋０｝、
        　　｛「Ｖ」：Ｒ＠「Ｖ」＋１、「Ｗ」：Ｒ＠「Ｗ」＋０、「Ｘ」：Ｒ＠「Ｘ」＋０、「Ｙ」：Ｒ＠「Ｙ」＋０、「Ｚ」：Ｒ＠「Ｚ」＋０｝、
        　　｛「Ｖ」：Ｒ＠「Ｖ」＋０、「Ｗ」：Ｒ＠「Ｗ」＋１、「Ｘ」：Ｒ＠「Ｘ」＋０、「Ｙ」：Ｒ＠「Ｙ」＋０、「Ｚ」：Ｒ＠「Ｚ」＋０｝、
        　　｛「Ｖ」：Ｒ＠「Ｖ」＋０、「Ｗ」：Ｒ＠「Ｗ」＋０、「Ｘ」：Ｒ＠「Ｘ」＋１、「Ｙ」：Ｒ＠「Ｙ」＋０、「Ｚ」：Ｒ＠「Ｚ」＋０｝、
        　　｛「Ｖ」：Ｒ＠「Ｖ」＋０、「Ｗ」：Ｒ＠「Ｗ」＋０、「Ｘ」：Ｒ＠「Ｘ」＋０、「Ｙ」：Ｒ＠「Ｙ」＋１、「Ｚ」：Ｒ＠「Ｚ」＋０｝、
        　　｛「Ｖ」：Ｒ＠「Ｖ」＋０、「Ｗ」：Ｒ＠「Ｗ」＋０、「Ｘ」：Ｒ＠「Ｘ」＋０、「Ｙ」：Ｒ＠「Ｙ」＋０、「Ｚ」：Ｒ＠「Ｚ」＋１｝、
        ］
        平面点Ｂは、Ｒの二次元変換
        「#80000040」で平面点Ｂの打点
        Ｄ＝０
        最短距離＝平面点Ａと平面点Ｂのユークリッド距離。
        ５回、
            平面点Ｘは、比較列［回数］の二次元変換。
            平面点Ｂから平面点Ｘへ打線。
            距離は、平面点Ａと平面点Ｘのユークリッド距離。
            ／／　最短距離を表示。
            ／／　距離を表示。
            もし、最短距離＞距離ならば、　＃　修正：＝を削除
                Ｄ＝回数
                最短距離＝距離
            ここまで。
            《🍵》秒待。
        ここまで。
        Ｒ＝比較列［Ｄ］
    ここまで。
    平面点Ｂは、Ｒの二次元変換
    赤色で平面点Ｂの打円。
    Ｒを戻す。
ここまで。

●（ボイドで）発生とは、
    「#d0d0f090」に塗色設定。
    ［０、０、３００、３００］に四角描画。
    キャンバス状態保存
    ［キャンバスサイズ／２、キャンバスサイズ／２］に描画起点設定。
    緑色で中心座標の打点。
    平面座標は、ボイドで乱点発生。
    青色で平面座標の打点。
    距離は、平面座標と中心座標のユークリッド距離。
    五次元座標は、平面座標の最近傍五次元座標。
    メッセージは、「Ｖ：」＆五次元座標＠「Ｖ」＆「　Ｗ：」＆五次元座標＠「Ｗ」＆「　Ｘ：」＆五次元座標＠「Ｘ」＆「　Ｙ：」＆五次元座標＠「Ｙ」＆「　Ｚ：」＆五次元座標＠「Ｚ」
    メッセージと言う。
    キャンバス状態復元
ここまで。


＃🌼🌼🌼　表示系　🌼🌼🌼
「#d0d0f0」に塗色設定。
［０、０、３００、３００］に四角描画。

黒色に線色設定。黒色に塗色設定。

打点ボタン＝「打点」のボタン作成。
消ボタン=「消去」のボタン作成。
保存ボタン=「保存」のボタン作成。

打点ボタンをクリックした時には、
    ボイドで発生。
ここまで。

消ボタンをクリックした時には、
    「#d0d0f0」に塗色設定。
    ［０、０、３００、３００］に四角描画。
ここまで。

保存ボタンをクリックした時には
描画ダウンロード。
ここまで。